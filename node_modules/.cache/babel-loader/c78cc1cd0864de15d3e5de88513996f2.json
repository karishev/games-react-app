{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aline\\\\Desktop\\\\reactJs start\\\\games-react-app\\\\src\\\\Components\\\\Context\\\\Fav.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Fav = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Fav\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}; // export const fetchDataAction = async (dispatch: any) => {\n//   const URL = 'https://free-to-play-games-database.p.rapidapi.com/api'\n//   const data = await fetch(URL)\n//   const dataJSON = await data.json()\n//   return dispatch({\n//     type: 'FETCH_DATA',\n//     payload: dataJSON._embedded.episodes,\n//   })\n// }\n// const initialState: State = {\n//   favorites: [],\n//   totalFavorites: 0,\n//   addToFavorite: () => {},\n//   gameIsFavorite: () => {},\n// }\n// type FavProps = {\n//   children: React.ReactNode\n// }\n// export const FavoritesContext = createContext<State | any>(initialState)\n// const favoriteReducer = (favorites: State, action: Action) => {\n//   switch (action.type) {\n//     case 'FETCH_DATA':\n//       return { ...favorites, episodes: action.payload }\n//     case 'ADD_FAV':\n//       return {\n//         ...favorites,\n//         favorites: [...favorites.favorites, action.payload],\n//       }\n//     case 'REMOVE_FAV':\n//       return favorites.filter(\n//         (favoriteGame: { id: Game }) => favoriteGame.id !== action.payload\n//       )\n//     default:\n//       return favorites\n//   }\n// }\n// export default function FavoritesContextProvider({ children }: FavProps) {\n//   const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\n//   const gameIsFavorite = (game: Game) => {\n//     return favorites.some(\n//       (favoriteGame: { id: Game }) => favoriteGame.id === game\n//     )\n//   }\n//   const addToFavorite = (game: Game) => {\n//     if (gameIsFavorite(game)) {\n//       dispatch({ type: 'REMOVE_FAVORITE', payload: game.id })\n//     } else {\n//       dispatch({ type: 'ADD_FAVORITE', payload: game })\n//     }\n//   }\n//   useEffect(() => {\n//     localStorage.setItem('favoriteGames', JSON.stringify(favorites))\n//   }, [favorites])\n//   return (\n//     <FavoritesContext.Provider\n//       value={{\n//         favorites,\n//         totalFavorites: favorites.length,\n//         addToFavorite,\n//         gameIsFavorite,\n//       }}\n//     >\n//       {children}\n//     </FavoritesContext.Provider>\n//   )\n// }\n\n/*import { createContext, useEffect, useReducer } from \"react\";\r\n\r\nexport const FavoritesContext = createContext({\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addToFavorite: (game) => {},\r\n  gameIsFavorite: (gameId) => {},\r\n});\r\n\r\nconst favoriteReducer = (favorites, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITE\":\r\n      return [action.payload, ...favorites];\r\n    case \"REMOVE_FAVORITE\":\r\n      return favorites.filter(\r\n        (favoriteGame) => favoriteGame.id !== action.payload\r\n      );\r\n    default:\r\n      return favorites;\r\n  }\r\n};\r\n\r\nexport default function FavoritesContextProvider({ children }) {\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, [], () => {\r\n    return JSON.parse(localStorage.getItem(\"favoriteGames\")) ?? [];\r\n  });\r\n\r\n  const gameIsFavorite = (gameId) => {\r\n    return favorites.some((favoriteGame) => favoriteGame.id === gameId);\r\n  };\r\n\r\n  const addToFavorite = (game) => {\r\n    if (gameIsFavorite(game.id)) {\r\n      dispatch({ type: \"REMOVE_FAVORITE\", payload: game.id });\r\n    } else {\r\n      dispatch({ type: \"ADD_FAVORITE\", payload: game });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favoriteGames\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        totalFavorites: favorites.length,\r\n        addToFavorite,\r\n        gameIsFavorite,\r\n      }}\r\n    >\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n} */\n\n_c = Fav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fav\");","map":{"version":3,"sources":["C:/Users/aline/Desktop/reactJs start/games-react-app/src/Components/Context/Fav.tsx"],"names":["React","Fav"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFM,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAtIaA,G","sourcesContent":["import React from 'react'\r\n\r\nexport const Fav = () => {\r\n  return <div>Fav</div>\r\n}\r\n\r\n// export const fetchDataAction = async (dispatch: any) => {\r\n//   const URL = 'https://free-to-play-games-database.p.rapidapi.com/api'\r\n//   const data = await fetch(URL)\r\n//   const dataJSON = await data.json()\r\n//   return dispatch({\r\n//     type: 'FETCH_DATA',\r\n//     payload: dataJSON._embedded.episodes,\r\n//   })\r\n// }\r\n\r\n// const initialState: State = {\r\n//   favorites: [],\r\n//   totalFavorites: 0,\r\n//   addToFavorite: () => {},\r\n//   gameIsFavorite: () => {},\r\n// }\r\n// type FavProps = {\r\n//   children: React.ReactNode\r\n// }\r\n\r\n// export const FavoritesContext = createContext<State | any>(initialState)\r\n\r\n// const favoriteReducer = (favorites: State, action: Action) => {\r\n//   switch (action.type) {\r\n//     case 'FETCH_DATA':\r\n//       return { ...favorites, episodes: action.payload }\r\n//     case 'ADD_FAV':\r\n//       return {\r\n//         ...favorites,\r\n//         favorites: [...favorites.favorites, action.payload],\r\n//       }\r\n//     case 'REMOVE_FAV':\r\n//       return favorites.filter(\r\n//         (favoriteGame: { id: Game }) => favoriteGame.id !== action.payload\r\n//       )\r\n//     default:\r\n//       return favorites\r\n//   }\r\n// }\r\n\r\n// export default function FavoritesContextProvider({ children }: FavProps) {\r\n//   const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\r\n\r\n//   const gameIsFavorite = (game: Game) => {\r\n//     return favorites.some(\r\n//       (favoriteGame: { id: Game }) => favoriteGame.id === game\r\n//     )\r\n//   }\r\n\r\n//   const addToFavorite = (game: Game) => {\r\n//     if (gameIsFavorite(game)) {\r\n//       dispatch({ type: 'REMOVE_FAVORITE', payload: game.id })\r\n//     } else {\r\n//       dispatch({ type: 'ADD_FAVORITE', payload: game })\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     localStorage.setItem('favoriteGames', JSON.stringify(favorites))\r\n//   }, [favorites])\r\n\r\n//   return (\r\n//     <FavoritesContext.Provider\r\n//       value={{\r\n//         favorites,\r\n//         totalFavorites: favorites.length,\r\n//         addToFavorite,\r\n//         gameIsFavorite,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </FavoritesContext.Provider>\r\n//   )\r\n// }\r\n\r\n/*import { createContext, useEffect, useReducer } from \"react\";\r\n\r\nexport const FavoritesContext = createContext({\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addToFavorite: (game) => {},\r\n  gameIsFavorite: (gameId) => {},\r\n});\r\n\r\nconst favoriteReducer = (favorites, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITE\":\r\n      return [action.payload, ...favorites];\r\n    case \"REMOVE_FAVORITE\":\r\n      return favorites.filter(\r\n        (favoriteGame) => favoriteGame.id !== action.payload\r\n      );\r\n    default:\r\n      return favorites;\r\n  }\r\n};\r\n\r\nexport default function FavoritesContextProvider({ children }) {\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, [], () => {\r\n    return JSON.parse(localStorage.getItem(\"favoriteGames\")) ?? [];\r\n  });\r\n\r\n  const gameIsFavorite = (gameId) => {\r\n    return favorites.some((favoriteGame) => favoriteGame.id === gameId);\r\n  };\r\n\r\n  const addToFavorite = (game) => {\r\n    if (gameIsFavorite(game.id)) {\r\n      dispatch({ type: \"REMOVE_FAVORITE\", payload: game.id });\r\n    } else {\r\n      dispatch({ type: \"ADD_FAVORITE\", payload: game });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favoriteGames\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        totalFavorites: favorites.length,\r\n        addToFavorite,\r\n        gameIsFavorite,\r\n      }}\r\n    >\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}