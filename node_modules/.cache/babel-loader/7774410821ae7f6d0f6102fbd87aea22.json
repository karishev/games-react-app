{"ast":null,"code":"var _jsxFileName = \"/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/UI/organisms/GameInfoBasics.tsx\";\nimport { Button, Card, CardContent, CardMedia } from \"@mui/material\";\nimport { InfoItem } from \"../atoms/InfoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameInfoBasics = game => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      marginLeft: \"2rem\",\n      maxWidth: \"20rem\",\n      marginTop: \"5rem\",\n      backgroundColor: \"rgba(0,0,0,0)\",\n      boxShadow: \"0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      sx: {\n        aspectRatio: \"16/9\",\n        maxWidth: \"100%\",\n        borderRadius: 1\n      },\n      component: \"img\",\n      alt: game.developer,\n      image: game.game_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        padding: \"0 8px\",\n        width: \"100%\"\n      },\n      children: Object.entries(game).map(_ref => {\n        let [key, value] = _ref;\n        return value !== game.game_image && /*#__PURE__*/_jsxDEV(InfoItem, {\n          first: key,\n          second: value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      sx: {\n        color: \"white\",\n        fontWeight: \"400\",\n        marginTop: \"1rem\",\n        maxWidth: \"90%\",\n        borderColor: \"white\"\n      },\n      fullWidth: true,\n      children: \"Add to Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = GameInfoBasics;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameInfoBasics\");","map":{"version":3,"sources":["/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/UI/organisms/GameInfoBasics.tsx"],"names":["Button","Card","CardContent","CardMedia","InfoItem","GameInfoBasics","game","marginLeft","maxWidth","marginTop","backgroundColor","boxShadow","display","flexDirection","alignItems","aspectRatio","borderRadius","developer","game_image","padding","width","Object","entries","map","key","value","color","fontWeight","borderColor"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,SAApC,QAAqD,eAArD;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAUA,OAAO,MAAMC,cAA+B,GAAIC,IAAD,IAAU;AACvD,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,UAAU,EAAE,MADV;AAEFC,MAAAA,QAAQ,EAAE,OAFR;AAGFC,MAAAA,SAAS,EAAE,MAHT;AAIFC,MAAAA,eAAe,EAAE,eAJf;AAKFC,MAAAA,SAAS,EAAE,GALT;AAMFC,MAAAA,OAAO,EAAE,MANP;AAOFC,MAAAA,aAAa,EAAE,QAPb;AAQFC,MAAAA,UAAU,EAAE;AARV,KADN;AAAA,4BAYE,QAAC,SAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,WAAW,EAAE,MADX;AAEFP,QAAAA,QAAQ,EAAE,MAFR;AAGFQ,QAAAA,YAAY,EAAE;AAHZ,OADN;AAME,MAAA,SAAS,EAAC,KANZ;AAOE,MAAA,GAAG,EAAEV,IAAI,CAACW,SAPZ;AAQE,MAAA,KAAK,EAAEX,IAAI,CAACY;AARd;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEC,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAAjB;AAAA,gBACGC,MAAM,CAACC,OAAP,CAAehB,IAAf,EAAqBiB,GAArB,CACC;AAAA,YAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;AAAA,eACEA,KAAK,KAAKnB,IAAI,CAACY,UAAf,iBACE,QAAC,QAAD;AAAoB,UAAA,KAAK,EAAEM,GAA3B;AAAgC,UAAA,MAAM,EAAEC;AAAxC,WAAeD,GAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,OADD;AADH;AAAA;AAAA;AAAA;AAAA,YAvBF,eA+BE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,EAAE,EAAE;AACFE,QAAAA,KAAK,EAAE,OADL;AAEFC,QAAAA,UAAU,EAAE,KAFV;AAGFlB,QAAAA,SAAS,EAAE,MAHT;AAIFD,QAAAA,QAAQ,EAAE,KAJR;AAKFoB,QAAAA,WAAW,EAAE;AALX,OAFN;AASE,MAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAjDM;KAAMvB,c","sourcesContent":["import { Button, Card, CardContent, CardMedia } from \"@mui/material\";\nimport { InfoItem } from \"../atoms/InfoItem\";\n\ninterface Props {\n  game_image: string;\n  publisher: string;\n  developer: string;\n  release_date: string;\n  platform: string;\n}\n\nexport const GameInfoBasics: React.FC<Props> = (game) => {\n  return (\n    <Card\n      sx={{\n        marginLeft: \"2rem\",\n        maxWidth: \"20rem\",\n        marginTop: \"5rem\",\n        backgroundColor: \"rgba(0,0,0,0)\",\n        boxShadow: \"0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <CardMedia\n        sx={{\n          aspectRatio: \"16/9\",\n          maxWidth: \"100%\",\n          borderRadius: 1,\n        }}\n        component=\"img\"\n        alt={game.developer}\n        image={game.game_image}\n      />\n\n      <CardContent sx={{ padding: \"0 8px\", width: \"100%\" }}>\n        {Object.entries(game).map(\n          ([key, value]) =>\n            value !== game.game_image  && (\n              <InfoItem key={key} first={key} second={value} />\n            )\n        )}\n      </CardContent>\n      <Button\n        variant=\"outlined\"\n        sx={{\n          color: \"white\",\n          fontWeight: \"400\",\n          marginTop: \"1rem\",\n          maxWidth: \"90%\",\n          borderColor: \"white\",\n        }}\n        fullWidth\n      >\n        Add to Favorites\n      </Button>\n\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}