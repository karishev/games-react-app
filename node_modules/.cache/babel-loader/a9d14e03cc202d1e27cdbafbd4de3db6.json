{"ast":null,"code":"export default function (api) {\n  return {\n    getGames: () => api.get('/games').then(response => {\n      return response.data;\n    })\n  };\n}","map":{"version":3,"sources":["C:/Users/aline/Desktop/reactJs start/games-react-app/src/model/games.model.tsx"],"names":["api","getGames","get","then","response","data"],"mappings":"AAoCA,eAAe,UAAUA,GAAV,EAEZ;AACD,SAAO;AACLC,IAAAA,QAAQ,EAAE,MACRD,GAAG,CAACE,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAwBC,QAAD,IAA6B;AAClD,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAFD;AAFG,GAAP;AAMD","sourcesContent":["export interface Game {\r\n  id: number\r\n  title: string\r\n  thumbnail: string\r\n  short_description: string\r\n  game_url: string\r\n  genre: string\r\n  platform: string\r\n  publisher: string\r\n  developer: string\r\n  release_date: string\r\n  freetogame_profile_url: string\r\n}\r\nexport interface State {\r\n  favorites: Array<Game>\r\n  totalFavorites: number\r\n  addToFavorite: (game: Game) => Action\r\n  gameIsFavorite\r\n}\r\n\r\nexport interface Action {\r\n  type: string\r\n  payload: any\r\n}\r\n\r\nexport interface EpisodeProps {\r\n  episodes: Array<Game>\r\n  store: { state: State; dispatch: any }\r\n  toggleFavAction: (state: State, dispatch: any, episode: Game) => Action\r\n  favorites: Array<Game>\r\n}\r\n\r\ninterface GamesRepsonse {\r\n  data: Array<Game>\r\n}\r\n\r\nexport default function (api: {\r\n  get: (arg0: string) => Promise<GamesRepsonse>\r\n}) {\r\n  return {\r\n    getGames: () =>\r\n      api.get('/games').then((response: GamesRepsonse) => {\r\n        return response.data\r\n      }),\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}