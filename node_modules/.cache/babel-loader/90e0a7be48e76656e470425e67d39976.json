{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aline\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\games-react-app\\\\src\\\\components\\\\pages\\\\GameInformationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport styles from \"../UI/modules/GameInformation.module.css\";\nimport { GameInfo } from \"../UI/organisms/GameInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchGame = async id => {\n  try {\n    const game = await api.game.getGame(id);\n    return game;\n  } catch (error) {\n    console.log(\"Error: \" + error);\n  } finally {\n    console.log(\"Finished\");\n  }\n};\n\nexport const GameInformation = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState();\n  useEffect(() => {\n    id && fetchGame(parseInt(id)).then(response => response && setGame(response));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: game ? /*#__PURE__*/_jsxDEV(GameInfo, {\n        game: game\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GameInformation, \"swyI5lf0wdadHcQ2lE6D8faEqkI=\", false, function () {\n  return [useParams];\n});\n\n_c = GameInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameInformation\");","map":{"version":3,"sources":["C:/Users/aline/Desktop/Новая папка/games-react-app/src/components/pages/GameInformationPage.tsx"],"names":["React","useEffect","useState","useParams","api","styles","GameInfo","fetchGame","id","game","getGame","error","console","log","GameInformation","setGame","parseInt","then","response","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;;AAEA,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAsB;AACtC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBF,EAAjB,CAAnB;AACA,WAAOC,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAxB;AACD,GALD,SAKU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,CATD;;AAWA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM;AAAEN,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,EAAE,IACAD,SAAS,CAACS,QAAQ,CAACR,EAAD,CAAT,CAAT,CAAwBS,IAAxB,CAA8BC,QAAD,IAAcA,QAAQ,IAAIH,OAAO,CAACG,QAAD,CAA9D,CADF;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEb,MAAM,CAACc,SAA3B;AAAA,gBACGV,IAAI,gBACD,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cADC,GAGH;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CApBM;;GAAMK,e;UACIX,S;;;KADJW,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GameDetails } from \"../../model/game.model\";\r\nimport api from \"../../services/api\";\r\nimport styles from \"../UI/modules/GameInformation.module.css\";\r\nimport { GameInfo } from \"../UI/organisms/GameInfo\";\r\n\r\nconst fetchGame = async (id: number) => {\r\n  try {\r\n    const game = await api.game.getGame(id);\r\n    return game;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  } finally {\r\n    console.log(\"Finished\");\r\n  }\r\n};\r\n\r\nexport const GameInformation: React.FC = () => {\r\n  const { id } = useParams();\r\n  const [game, setGame] = useState<GameDetails>();\r\n\r\n  useEffect(() => {\r\n    id &&\r\n      fetchGame(parseInt(id)).then((response) => response && setGame(response));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className={styles.container}>\r\n        {game ? (\r\n            <GameInfo game={game} />\r\n        ) : (\r\n          \"loading\"\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}