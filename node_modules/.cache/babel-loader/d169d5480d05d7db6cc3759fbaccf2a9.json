{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aline\\\\Desktop\\\\reactJs start\\\\games-react-app\\\\src\\\\Components\\\\Context\\\\Fav.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const fetchDataAction = async dispatch => {\n  const URL = 'https://free-to-play-games-database.p.rapidapi.com/api';\n  const data = await fetch(URL);\n  const dataJSON = await data.json();\n  return dispatch({\n    type: 'FETCH_DATA',\n    payload: dataJSON._embedded.episodes\n  });\n};\nconst initialState = {\n  favorites: [],\n  totalFavorites: 0,\n  addToFavorite: () => {},\n  gameIsFavorite: () => {}\n};\nexport const FavoritesContext = /*#__PURE__*/createContext(initialState);\n\nconst favoriteReducer = (favorites, action) => {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return { ...favorites,\n        episodes: action.payload\n      };\n\n    case 'ADD_FAV':\n      return { ...favorites,\n        favorites: [...favorites.favorites, action.payload]\n      };\n\n    case 'REMOVE_FAV':\n      return favorites.filter(favoriteGame => favoriteGame.id !== action.payload);\n\n    default:\n      return favorites;\n  }\n};\n\nexport default function FavoritesContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\n\n  const gameIsFavorite = game => {\n    return favorites.some(favoriteGame => favoriteGame.id === game);\n  };\n\n  const addToFavorite = game => {\n    if (gameIsFavorite(game)) {\n      dispatch({\n        type: 'REMOVE_FAVORITE',\n        payload: game.id\n      });\n    } else {\n      dispatch({\n        type: 'ADD_FAVORITE',\n        payload: game\n      });\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteGames', JSON.stringify(favorites));\n  }, [favorites]);\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: {\n      favorites,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n/*import { createContext, useEffect, useReducer } from \"react\";\r\n\r\nexport const FavoritesContext = createContext({\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addToFavorite: (game) => {},\r\n  gameIsFavorite: (gameId) => {},\r\n});\r\n\r\nconst favoriteReducer = (favorites, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITE\":\r\n      return [action.payload, ...favorites];\r\n    case \"REMOVE_FAVORITE\":\r\n      return favorites.filter(\r\n        (favoriteGame) => favoriteGame.id !== action.payload\r\n      );\r\n    default:\r\n      return favorites;\r\n  }\r\n};\r\n\r\nexport default function FavoritesContextProvider({ children }) {\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, [], () => {\r\n    return JSON.parse(localStorage.getItem(\"favoriteGames\")) ?? [];\r\n  });\r\n\r\n  const gameIsFavorite = (gameId) => {\r\n    return favorites.some((favoriteGame) => favoriteGame.id === gameId);\r\n  };\r\n\r\n  const addToFavorite = (game) => {\r\n    if (gameIsFavorite(game.id)) {\r\n      dispatch({ type: \"REMOVE_FAVORITE\", payload: game.id });\r\n    } else {\r\n      dispatch({ type: \"ADD_FAVORITE\", payload: game });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favoriteGames\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        totalFavorites: favorites.length,\r\n        addToFavorite,\r\n        gameIsFavorite,\r\n      }}\r\n    >\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n} */\n\n_s(FavoritesContextProvider, \"QjwVjjsOk7PXJ/4Gub+TAERo/9Y=\");\n\n_c = FavoritesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesContextProvider\");","map":{"version":3,"sources":["C:/Users/aline/Desktop/reactJs start/games-react-app/src/Components/Context/Fav.tsx"],"names":["createContext","useEffect","useReducer","fetchDataAction","dispatch","URL","data","fetch","dataJSON","json","type","payload","_embedded","episodes","initialState","favorites","totalFavorites","addToFavorite","gameIsFavorite","FavoritesContext","favoriteReducer","action","filter","favoriteGame","id","FavoritesContextProvider","children","game","some","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer } from 'react'\r\nimport { Action, State, Game } from '../../model/games.model'\r\n\r\nexport const fetchDataAction = async (dispatch: any) => {\r\n  const URL = 'https://free-to-play-games-database.p.rapidapi.com/api'\r\n  const data = await fetch(URL)\r\n  const dataJSON = await data.json()\r\n  return dispatch({\r\n    type: 'FETCH_DATA',\r\n    payload: dataJSON._embedded.episodes,\r\n  })\r\n}\r\n\r\nconst initialState: State = {\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addToFavorite: () => {},\r\n  gameIsFavorite: () => {},\r\n}\r\ntype FavProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const FavoritesContext = createContext<State | any>(initialState)\r\n\r\nconst favoriteReducer = (favorites: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return { ...favorites, episodes: action.payload }\r\n    case 'ADD_FAV':\r\n      return {\r\n        ...favorites,\r\n        favorites: [...favorites.favorites, action.payload],\r\n      }\r\n    case 'REMOVE_FAV':\r\n      return favorites.filter(\r\n        (favoriteGame: { id: Game }) => favoriteGame.id !== action.payload\r\n      )\r\n    default:\r\n      return favorites\r\n  }\r\n}\r\n\r\nexport default function FavoritesContextProvider({ children }: FavProps) {\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\r\n\r\n  const gameIsFavorite = (game: Game) => {\r\n    return favorites.some(\r\n      (favoriteGame: { id: Game }) => favoriteGame.id === game\r\n    )\r\n  }\r\n\r\n  const addToFavorite = (game: Game) => {\r\n    if (gameIsFavorite(game)) {\r\n      dispatch({ type: 'REMOVE_FAVORITE', payload: game.id })\r\n    } else {\r\n      dispatch({ type: 'ADD_FAVORITE', payload: game })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favoriteGames', JSON.stringify(favorites))\r\n  }, [favorites])\r\n\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  )\r\n}\r\n\r\n/*import { createContext, useEffect, useReducer } from \"react\";\r\n\r\nexport const FavoritesContext = createContext({\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addToFavorite: (game) => {},\r\n  gameIsFavorite: (gameId) => {},\r\n});\r\n\r\nconst favoriteReducer = (favorites, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITE\":\r\n      return [action.payload, ...favorites];\r\n    case \"REMOVE_FAVORITE\":\r\n      return favorites.filter(\r\n        (favoriteGame) => favoriteGame.id !== action.payload\r\n      );\r\n    default:\r\n      return favorites;\r\n  }\r\n};\r\n\r\nexport default function FavoritesContextProvider({ children }) {\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, [], () => {\r\n    return JSON.parse(localStorage.getItem(\"favoriteGames\")) ?? [];\r\n  });\r\n\r\n  const gameIsFavorite = (gameId) => {\r\n    return favorites.some((favoriteGame) => favoriteGame.id === gameId);\r\n  };\r\n\r\n  const addToFavorite = (game) => {\r\n    if (gameIsFavorite(game.id)) {\r\n      dispatch({ type: \"REMOVE_FAVORITE\", payload: game.id });\r\n    } else {\r\n      dispatch({ type: \"ADD_FAVORITE\", payload: game });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favoriteGames\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        totalFavorites: favorites.length,\r\n        addToFavorite,\r\n        gameIsFavorite,\r\n      }}\r\n    >\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}