{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aline\\\\Desktop\\\\reactJs start\\\\games-react-app\\\\src\\\\Pages\\\\Catalog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchGame = async id => {\n  try {\n    const game = await api.game.getGame(id);\n    return game;\n  } catch (error) {\n    console.log('Error: ' + error);\n  } finally {\n    console.log('Finished');\n  }\n};\n\nexport const GameInformation = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState();\n  useEffect(() => {\n    id && fetchGame(parseInt(id)).then(response => response && setGame(response));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: game && game.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GameInformation, \"swyI5lf0wdadHcQ2lE6D8faEqkI=\", false, function () {\n  return [useParams];\n});\n\n_c = GameInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameInformation\");","map":{"version":3,"sources":["C:/Users/aline/Desktop/reactJs start/games-react-app/src/Pages/Catalog.tsx"],"names":["React","useEffect","useState","useParams","api","fetchGame","id","game","getGame","error","console","log","GameInformation","setGame","parseInt","then","response","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;;;;AAEA,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAsB;AACtC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBF,EAAjB,CAAnB;AACA,WAAOC,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAxB;AACD,GALD,SAKU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,CATD;;AAWA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM;AAAEN,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAACI,IAAD,EAAOM,OAAP,IAAkBX,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,EAAE,IACAD,SAAS,CAACS,QAAQ,CAACR,EAAD,CAAT,CAAT,CAAwBS,IAAxB,CAA8BC,QAAD,IAAcA,QAAQ,IAAIH,OAAO,CAACG,QAAD,CAA9D,CADF;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAA,gBAAMT,IAAI,IAAIA,IAAI,CAACU;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAdM;;GAAML,e;UACIT,S;;;KADJS,e","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { GameDetails } from '../model/game.model'\r\nimport api from '../services/api'\r\n\r\nconst fetchGame = async (id: number) => {\r\n  try {\r\n    const game = await api.game.getGame(id)\r\n    return game\r\n  } catch (error) {\r\n    console.log('Error: ' + error)\r\n  } finally {\r\n    console.log('Finished')\r\n  }\r\n}\r\n\r\nexport const GameInformation: React.FC = () => {\r\n  const { id } = useParams()\r\n  const [game, setGame] = useState<GameDetails>()\r\n\r\n  useEffect(() => {\r\n    id &&\r\n      fetchGame(parseInt(id)).then((response) => response && setGame(response))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div>{game && game.description}</div>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}