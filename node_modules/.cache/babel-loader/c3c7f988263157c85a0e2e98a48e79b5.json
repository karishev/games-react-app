{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aline\\\\Desktop\\\\reactJs start\\\\games-react-app\\\\src\\\\Components\\\\Games\\\\GameItem.tsx\";\nimport { Link } from 'react-router-dom';\nimport { AiFillWindows } from 'react-icons/ai';\nimport { GoBrowser } from 'react-icons/go';\nimport styles from '../UI/GameItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameItem = (props, _ref) => {\n  let {\n    game\n  } = _ref;\n  const {\n    episodes,\n    toggleFavAction,\n    favorites,\n    store\n  } = props;\n  const {\n    state,\n    dispatch\n  } = store;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/games/${game.id}`,\n      className: styles.card_header,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.thumbnail,\n        src: game.thumbnail,\n        alt: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_body,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/games/${game.id}`,\n        className: styles.title,\n        children: game.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${styles.description} text-muted`,\n        children: [game.short_description.substring(0, 70), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card_footer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.badge,\n            children: game.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), game.platform.includes('PC (Windows)') ? /*#__PURE__*/_jsxDEV(AiFillWindows, {\n            className: styles.platform_icon,\n            title: \"Available on Windows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(GoBrowser, {\n            className: styles.platform_icon,\n            title: \"Available on Browser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => toggleFavAction(state, dispatch, episode),\n          children: favorites.find(fav => fav.id === episode.id) ? 'Undo Favorite' : 'add Favorite'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = GameItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameItem\");","map":{"version":3,"sources":["C:/Users/aline/Desktop/reactJs start/games-react-app/src/Components/Games/GameItem.tsx"],"names":["Link","AiFillWindows","GoBrowser","styles","GameItem","props","game","episodes","toggleFavAction","favorites","store","state","dispatch","card","id","card_header","thumbnail","card_body","title","description","short_description","substring","card_footer","badge","genre","platform","includes","platform_icon","episode","find","fav"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA2C,gBAA3C;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;;AAQA,OAAO,MAAMC,QAA6B,GAAG,CAACC,KAAD,WAA0B;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACrE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAkDL,KAAxD;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,KAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACU,IAAvB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASP,IAAI,CAACQ,EAAG,EAA5B;AAA+B,MAAA,SAAS,EAAEX,MAAM,CAACY,WAAjD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACa,SAAvB;AAAkC,QAAA,GAAG,EAAEV,IAAI,CAACU,SAA5C;AAAuD,QAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASX,IAAI,CAACQ,EAAG,EAA5B;AAA+B,QAAA,SAAS,EAAEX,MAAM,CAACe,KAAjD;AAAA,kBACGZ,IAAI,CAACY;AADR;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAG,GAAEf,MAAM,CAACgB,WAAY,aAApC;AAAA,mBACGb,IAAI,CAACc,iBAAL,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,EAApC,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB,WAAvB;AAAA,gCACE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAEnB,MAAM,CAACoB,KAAxB;AAAA,sBAAgCjB,IAAI,CAACkB;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGlB,IAAI,CAACmB,QAAL,CAAcC,QAAd,CAAuB,cAAvB,iBACC,QAAC,aAAD;AACE,YAAA,SAAS,EAAEvB,MAAM,CAACwB,aADpB;AAEE,YAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,kBADD,gBAMC,QAAC,SAAD;AACE,YAAA,SAAS,EAAExB,MAAM,CAACwB,aADpB;AAEE,YAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAMnB,eAAe,CAACG,KAAD,EAAQC,QAAR,EAAkBgB,OAAlB,CAFhC;AAAA,oBAIGnB,SAAS,CAACoB,IAAV,CAAgBC,GAAD,IAAkBA,GAAG,CAAChB,EAAJ,KAAWc,OAAO,CAACd,EAApD,IACG,eADH,GAEG;AANN;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA1CM;KAAMV,Q","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { AiFillWindows, AiFillHeart } from 'react-icons/ai'\r\nimport { GoBrowser } from 'react-icons/go'\r\nimport { Game, EpisodeProps } from '../../model/games.model'\r\nimport styles from '../UI/GameItem.module.css'\r\nimport { Store } from '../Context/Store'\r\nimport { useContext } from 'react'\r\n\r\ninterface PageProps {\r\n  game: Game\r\n}\r\n\r\nexport const GameItem: React.FC<PageProps> = (props: any, { game }) => {\r\n  const { episodes, toggleFavAction, favorites, store } = props\r\n  const { state, dispatch } = store\r\n  return (\r\n    <div className={styles.card}>\r\n      <Link to={`/games/${game.id}`} className={styles.card_header}>\r\n        <img className={styles.thumbnail} src={game.thumbnail} alt=\"test\" />\r\n      </Link>\r\n      <div className={styles.card_body}>\r\n        <Link to={`/games/${game.id}`} className={styles.title}>\r\n          {game.title}\r\n        </Link>\r\n        <p className={`${styles.description} text-muted`}>\r\n          {game.short_description.substring(0, 70)}...\r\n        </p>\r\n        <div className={styles.card_footer}>\r\n          <div>\r\n            <span className={styles.badge}>{game.genre}</span>\r\n            {game.platform.includes('PC (Windows)') ? (\r\n              <AiFillWindows\r\n                className={styles.platform_icon}\r\n                title=\"Available on Windows\"\r\n              />\r\n            ) : (\r\n              <GoBrowser\r\n                className={styles.platform_icon}\r\n                title=\"Available on Browser\"\r\n              />\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => toggleFavAction(state, dispatch, episode)}\r\n          >\r\n            {favorites.find((fav: Episode) => fav.id === episode.id)\r\n              ? 'Undo Favorite'\r\n              : 'add Favorite'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}