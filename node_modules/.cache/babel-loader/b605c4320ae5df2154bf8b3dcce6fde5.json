{"ast":null,"code":"var _jsxFileName = \"/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/UI/atoms/InfoItem.tsx\";\nimport { Divider, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InfoItem = info => {\n  const keyChanger = () => {\n    if (info.key == \"release_date\") return \"Release Date\";else return info.key[0].toUpperCase() + info.key.substring(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: \"1rem\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: keyChanger()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: info.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = InfoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoItem\");","map":{"version":3,"sources":["/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/UI/atoms/InfoItem.tsx"],"names":["Divider","Typography","InfoItem","info","keyChanger","key","toUpperCase","substring","display","justifyContent","marginTop","color","value"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,eAApC;;;AAOA,OAAO,MAAMC,QAAyB,GAAIC,IAAD,IAAU;AACjD,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAID,IAAI,CAACE,GAAL,IAAY,cAAhB,EAAgC,OAAO,cAAP,CAAhC,KACK,OAAOF,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYC,WAAZ,KAA4BH,IAAI,CAACE,GAAL,CAASE,SAAT,CAAmB,CAAnB,CAAnC;AACN,GAHD;;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,eAFX;AAGLC,QAAAA,SAAS,EAAE,MAHN;AAILC,QAAAA,KAAK,EAAE;AAJF,OADT;AAAA,8BAQE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA6BP,UAAU;AAAvC;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA6BD,IAAI,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,OAAD;AAAS,MAAA,KAAK;AAAd;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CArBM;KAAMV,Q","sourcesContent":["import { Divider, Typography } from \"@mui/material\";\n\ninterface Props {\n  key: string;\n  value: string;\n}\n\nexport const InfoItem: React.FC<Props> = (info) => {\n  const keyChanger = () => {\n    if (info.key == \"release_date\") return \"Release Date\";\n    else return info.key[0].toUpperCase() + info.key.substring(1);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: \"1rem\",\n          color: \"white\",\n        }}\n      >\n        <Typography variant=\"body2\">{keyChanger()}</Typography>\n        <Typography variant=\"body2\">{info.value}</Typography>\n      </div>\n      <Divider light />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}