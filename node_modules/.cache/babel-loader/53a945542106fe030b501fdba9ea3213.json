{"ast":null,"code":"var _jsxFileName = \"/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/pages/GameInformation.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Slider } from \"../UI/atoms/Slider\";\nimport api from \"../../services/api\";\nimport styles from \"../UI/modules/GameInformation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchGame = async id => {\n  try {\n    const game = await api.game.getGame(id);\n    return game;\n  } catch (error) {\n    console.log(\"Error: \" + error);\n  } finally {\n    console.log(\"Finished\");\n  }\n};\n\nexport const GameInformation = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState();\n\n  const Images = () => {\n    let cr = Array();\n    let aaa = game && game.screenshots.filter(item => item.image);\n    console.log(aaa);\n    game === null || game === void 0 ? void 0 : game.screenshots.forEach(element => {\n      cr.push(element.image);\n    });\n    return cr;\n  };\n\n  useEffect(() => {\n    id && fetchGame(parseInt(id)).then(response => response && setGame(response));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: game ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: game.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Slider, {\n          images: Images()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this) : \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GameInformation, \"swyI5lf0wdadHcQ2lE6D8faEqkI=\", false, function () {\n  return [useParams];\n});\n\n_c = GameInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameInformation\");","map":{"version":3,"sources":["/Users/karishev/Desktop/coding/onelab-project/movie-react-app/src/components/pages/GameInformation.tsx"],"names":["Typography","React","useEffect","useState","useParams","Slider","api","styles","fetchGame","id","game","getGame","error","console","log","GameInformation","setGame","Images","cr","Array","aaa","screenshots","filter","item","image","forEach","element","push","parseInt","then","response","container","title"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;;;;AAEA,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAsB;AACtC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBF,EAAjB,CAAnB;AACA,WAAOC,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAxB;AACD,GALD,SAKU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,CATD;;AAWA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM;AAAEN,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,EAAhC;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACnB,QAAIC,EAAE,GAAGC,KAAK,EAAd;AACA,QAAIC,GAAG,GAAGV,IAAI,IAAIA,IAAI,CAACW,WAAL,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,KAArC,CAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAV,IAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,WAAN,CAAkBI,OAAlB,CAA0BC,OAAO,IAAI;AACnCR,MAAAA,EAAE,CAACS,IAAH,CAAQD,OAAO,CAACF,KAAhB;AACD,KAFD;AAGA,WAAON,EAAP;AACD,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,EAAE,IACAD,SAAS,CAACoB,QAAQ,CAACnB,EAAD,CAAT,CAAT,CAAwBoB,IAAxB,CAA8BC,QAAD,IAAcA,QAAQ,IAAId,OAAO,CAACc,QAAD,CAA9D,CADF;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEvB,MAAM,CAACwB,SAA3B;AAAA,gBACGrB,IAAI,gBAAG;AAAA,gCAAK,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BA,IAAI,CAACsB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAL,oBAAwD,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEf,MAAM;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA+F;AADtG;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CA1BM;;GAAMF,e;UACIX,S;;;KADJW,e","sourcesContent":["import { Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GameDetails } from \"../../model/game.model\";\nimport { Slider } from \"../UI/atoms/Slider\";\nimport api from \"../../services/api\";\nimport styles from \"../UI/modules/GameInformation.module.css\";\n\nconst fetchGame = async (id: number) => {\n  try {\n    const game = await api.game.getGame(id);\n    return game;\n  } catch (error) {\n    console.log(\"Error: \" + error);\n  } finally {\n    console.log(\"Finished\");\n  }\n};\n\nexport const GameInformation: React.FC = () => {\n  const { id } = useParams();\n  const [game, setGame] = useState<GameDetails>();\n\n  const Images = () => {\n    let cr = Array<string>();\n    let aaa = game && game.screenshots.filter(item => item.image)\n    console.log(aaa);\n    game?.screenshots.forEach(element => {\n      cr.push(element.image);\n    });\n    return cr;\n  }\n\n  useEffect(() => {\n    id &&\n      fetchGame(parseInt(id)).then((response) => response && setGame(response));\n  }, []);\n\n  return (\n    <>\n      <section className={styles.container}>\n        {game ? <div><Typography variant=\"h4\">{game.title}</Typography> <Slider images={Images()}/></div> : \"loading\"}\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}